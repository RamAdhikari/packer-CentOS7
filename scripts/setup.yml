---
- name: "Setup.yml"
  hosts: all
  gather_facts: yes
  become: yes
  tasks:
  - name: Colorize root shell prompt (All)
    lineinfile:
      path: /root/.bashrc
      line: 'export PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\h:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]:\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"'
      state: present

  - name: Create vim configuration file (All)
    file:
      path: /root/.vimrc
      state: touch
      owner: root
      group: root
      mode: 0644

  - name: Configure vim (All)
    blockinfile:
      path: /root/.vimrc
      block: |
        set nocompatible
        set number
        syntax on
        highlight Comment ctermfg=LightCyan
      marker: ""
      state: present

  - name: Disable UseDNS (All)
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^UseDNS"
      line: "UseDNS no"
      state: present

  - name: Disable GSSAPIAuthentication (All)
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication no"
      state: present

  - name: Disable quiet boot mode (Debian)
    lineinfile:
      path: /etc/default/grub
      regexp: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"'
      line: 'GRUB_CMDLINE_LINUX_DEFAULT=""'
      state: present
    when: ansible_os_family == "Debian"

  - name: Update grub2 (Debian)
    command: update-grub2
    when: ansible_os_family == "Debian"

  - name: Update CA bundle (RedHat)
    get_url:
      url: https://curl.haxx.se/ca/cacert.pem
      dest: /etc/pki/tls/certs/ca-bundle.crt 
      force: yes
    when: ansible_os_family == "RedHat"

  - name: Upgrade all packages (Debian)
    apt:
      update_cache: yes
      upgrade: dist
    when: ansible_os_family == "Debian"

  - name: Ensure a list of packages is installed (Debian)
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bash-completion
      - ccze
      - curl
      - git
      - rsync
      - screen
      - tcpdump
      - vim
      - wget
    when: ansible_os_family == "Debian"

  - name: Install epel repo (RedHat)
    yum:
      name: "epel-release"
      state: latest
    when: ansible_os_family == "RedHat"

  - name: Upgrade all packages (RedHat)
    yum:
      name: "*"
      state: latest
    when: ansible_os_family == "RedHat"

  - name: Ensure a list of packages is installed (RedHat)
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bash-completion
      - ccze
      - curl
      - git
      - rsync
      - screen
      - tcpdump
      - vim
      - wget
    when: ansible_os_family == "RedHat"

  - name: Ensure dependencies for VirtualBox Guest Additions are installed (Debian)
    apt:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - dkms
    when:
      - ansible_os_family == "Debian"
      - ansible_virtualization_type == "virtualbox"

  - name: Ensure dependencies for VirtualBox Guest Additions are installed (RedHat)
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - bzip2
      - dkms
      - kernel-devel
      - kernel-headers
    when:
      - ansible_os_family == "RedHat"
      - ansible_virtualization_type == "virtualbox"

  - name: Mount VBoxGuestAdditions.iso
    mount:
      path: /mnt
      src: /home/packer/VBoxGuestAdditions.iso
      fstype: iso9660
      opts: ro,loop
      state: mounted
    when: ansible_virtualization_type == "virtualbox"

  - name: Install VBoxGuestAdditions.iso
    command: sh /mnt/VBoxLinuxAdditions.run
    when: ansible_virtualization_type == "virtualbox"

  - name: Umount VBoxGuestAdditions.iso
    mount:
      path: /mnt
      state: unmounted
    when: ansible_virtualization_type == "virtualbox"

  - name: Delete VBoxGuestAdditions.iso
    file:
      path: /home/packer/VBoxGuestAdditions.iso
      state: absent
    when: ansible_virtualization_type == "virtualbox"

  - name: Install open-vm-tools (Debian)
    apt:
      name: open-vm-tools
      state: latest
    when: 
      - ansible_os_family == "Debian"
      - ansible_virtualization_type == "VMware"

  - name: Install open-vm-tools (RedHat)
    yum:
      name: open-vm-tools
      state: latest
    when: 
      - ansible_os_family == "RedHat"
      - ansible_virtualization_type == "VMware"
